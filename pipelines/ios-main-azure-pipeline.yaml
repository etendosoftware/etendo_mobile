variables:
  P12SecureFileId: ba940be2-bea4-486d-86a2-53d8105521f5
  MobileProvisionSecureFileId: 036150db-8ad8-4825-aa9b-1713ffcac0ac
  AppExtensionProvisionSecureFiles: >-
    [{"fileId":"9b298cbf-b557-4909-8199-e8b02bd538a8","fileName":"Etendo_Recieve_Share.mobileprovision","targetBundleIdentifier":"com.etendoapploader.ios.EtendoRecieveShare"}]
  MobileProvision: >-
    {"expirationDate":"2025-12-16T18:57:43.000Z","teamIdentifier":"B4T44MT553","type":"app-store","bundleIdentifier":"com.etendoapploader.ios","UUID":"9dcc02fc-0024-46fe-b528-5126536be0b3"}
  APPCENTER_XCODE_PROJECT: ios/Etendo_Mobile.xcworkspace
  APPCENTER_XCODE_WORKSPACE: ios/Etendo_Mobile.xcworkspace
  sonoma.tags: 'continuous,javascript,xcode,signed,distribution'
  artifactVersioning.build.value: '0'
name: $(artifactVersioning.build.value)
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/main
trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
      - .gitignore
pr: none
jobs:
  - job: Phase_1
    displayName: Build
    cancelTimeoutInMinutes: 0
    pool:
      name: Azure Pipelines
      vmImage: macOS-13
    steps:
      - checkout: self
        clean: true
        submodules: recursive
        lfs: true
      - task: PowerShell@2
        displayName: Install build scripts
        continueOnError: true
        inputs:
          targetType: inline
          scriptName: ''
          script: >-
            Set-Location -Path '$(Agent.HomeDirectory)'

            Invoke-WebRequest -Uri
            'https://build-assets.appcenter.ms/buildscripts/appcenter-build-assets-latest.zip'
            -OutFile 'appcenter-build-assets-latest.zip'

            if (Test-Path ./scripts) { Remove-Item -Path ./scripts -Force
            -Recurse }

            New-Item -ItemType directory -Path 'scripts' | Out-Null

            unzip -q -d 'scripts' 'appcenter-build-assets-latest.zip'

            Invoke-Expression 'bash ./scripts/init.sh'
          failOnStderr: true
      - task: ShellScript@2
        displayName: Post Clone Script
        inputs:
          scriptPath: appcenter-post-clone.sh
      - task: Bash@3
        displayName: Select Node.js Version v2
        inputs:
          filePath: $(Agent.HomeDirectory)/scripts/select-node-version.sh
          arguments: node18
          failOnStderr: true
      - task: CmdLine@1
        displayName: yarn/npm install
        inputs:
          filename: sh
          arguments: >-
            -c "if [ -f yarn.lock ]; then { yarn install
            --network-timeout=600000; } else npm install; fi"
      - task: CmdLine@2
        displayName: Generate source map
        inputs:
          script: >-
            #!/bin/sh

            INDEX_FILE="index.ios.js"

            if [ -f "index.js" ]; then
              INDEX_FILE="index.js"
            fi

            echo "Found $INDEX_FILE for ReactNative index."

            if [ ! -f ./node_modules/react-native/local-cli/cli.js ]; then
              mkdir ./node_modules/react-native/local-cli
             echo "require('@react-native-community/cli').run();" >> ./node_modules/react-native/local-cli/cli.js
            fi

            node --max_old_space_size=8192
            node_modules/react-native/local-cli/cli.js bundle --entry-file
            $INDEX_FILE --platform ios --dev false --reset-cache --bundle-output
            dummy-sourcemap-main.jsbundle --sourcemap-output index.ios.map
          failOnStandardError: false
      - task: CmdLine@1
        displayName: Copy source map file to staging
        inputs:
          filename: sh
          arguments: >-
            -c "mkdir -p $(build.artifactstagingdirectory)/symbols && cp
            index.ios.map $(build.artifactstagingdirectory)/symbols/"
          failOnStandardError: true
      - task: ShellScript@2
        displayName: Tag build
        inputs:
          scriptPath: $(Agent.HomeDirectory)/scripts/emit-tags.sh
          args: $(sonoma.tags)
      - task: CmdLine@1
        displayName: Set Xcode path
        inputs:
          filename: /bin/bash
          arguments: >-
            -c "sudo xcode-select --switch
            /Applications/Xcode_15.0.1.app/Contents/Developer"
      - task: InstallAppleCertificate@2
        displayName: Install Apple certificate
        inputs:
          certSecureFile: $(P12SecureFileId)
          certPwd: $(P12Password)
      - task: InstallAppleProvisioningProfile@0
        displayName: Install Apple provisioning profile
        inputs:
          provProfileSecureFile: $(MobileProvisionSecureFileId)
      - task: InstallAppleProvisioningProfile@0
        displayName: Install Apple provisioning profile
        inputs:
          provProfileSecureFile: 105406af-28ef-4246-8494-e1db2b52ab3e
      - task: CocoaPods@0
        displayName: Pod install
        inputs:
          cwd: ios
          forceRepoUpdate: true
      - task: Bash@3
        displayName: Determine project file path
        inputs:
          filePath: $(Agent.HomeDirectory)/scripts/detect-autogenerated-workspace.sh
          arguments: ios Etendo_Mobile
          workingDirectory: $(Build.SourcesDirectory)
      - task: ShellScript@2
        displayName: Determine signing style and pods update
        inputs:
          scriptPath: >-
            $(Agent.HomeDirectory)/scripts/determine-signing-style-and-pods-update.sh
          disableAutoCwd: true
          cwd: $(Build.SourcesDirectory)
      - task: PowerShell@2 
        displayName: Determine monotonically increasing build number
        inputs: 
          targetType: 'inline'
          script: |
            $maxBundleVersion = 2147483647
            $timestamp = Get-Date -Format "yyyyMMddHH"
            [long]$timestampValue = 0
            if (-not [long]::TryParse($timestamp, [ref]$timestampValue)) {
              throw "Unable to parse timestamp '$timestamp' into a numeric build number"
            }
            $increment = 1
            $buildIdRaw = $env:BUILD_BUILDID
            if (![string]::IsNullOrWhiteSpace($buildIdRaw)) {
              [long]$buildId = 0
              if ([long]::TryParse($buildIdRaw, [ref]$buildId) -and $buildId -gt 0) {
                $increment = (($buildId - 1) % 1000) + 1
              } else {
                Write-Warning "BUILD_BUILDID value '$buildIdRaw' is invalid. Falling back to timestamp-based increment."
              }
            } else {
              Write-Warning "BUILD_BUILDID is not available. Falling back to timestamp-based increment."
            }
            $versionCode = $timestampValue + $increment
            if ($versionCode -gt $maxBundleVersion) {
              throw "Calculated bundle version '$versionCode' exceeds the App Store Connect limit '$maxBundleVersion'"
            }
            Write-Host "Calculated bundle version: $versionCode"
            Write-Host "##vso[task.setvariable variable=versionCode]$versionCode"
            Write-Host "##vso[task.setvariable variable=BUNDLE_VERSION]$versionCode"
      - task: CmdLine@1
        displayName: Set Bundle version
        inputs:
          filename: /usr/bin/find
          arguments: >-
            . -name "*Info.plist" -exec /usr/libexec/PlistBuddy -c "Set
            :CFBundleVersion $(versionCode)" {} ;
      - task: CmdLine@1
        displayName: Update Xcode build settings
        continueOnError: true
        inputs:
          filename: node
          arguments: >-
            $(Agent.HomeDirectory)/scripts/build-xcproject-analyzer/node_modules/@build/xcproject-analyzer-script/script/bin.js
            --app-id="7c22e934-4599-477a-9f23-5c58b1500e79"
            --app-insights-key="$(AppInsightsKey)"
            --xc-workspace-path="$(APPCENTER_XCODE_WORKSPACE)"
            --scheme="Etendo_Mobile" --code-sign-style="$(SIGNING_OPTION)"
            --app-provisioning-profile-uuid="9dcc02fc-0024-46fe-b528-5126536be0b3"
            --app-extension-provisioning-profile-uuids="422a41d1-b62d-469e-b7d3-fd81030487bb"
            --app-extension-target-bundle-identifiers="com.etendoapploader.ios.EtendoRecieveShare"
            --code-sign-identity="$(APPLE_CERTIFICATE_SIGNING_IDENTITY)"
            --development-team="B4T44MT553"
            --app-bundle-identifier="com.etendoapploader.ios"
          workingFolder: $(Build.SourcesDirectory)
      - task: Xcode@4
        displayName: Xcode build (signed)
        inputs:
          actions: clean
          configuration: ''
          sdk: ''
          xcWorkspacePath: $(APPCENTER_XCODE_PROJECT)
          scheme: Etendo_Mobile
          xcodeDeveloperDir: /Applications/Xcode_15.0.1.app/Contents/Developer
          packageApp: true
          archivePath: $(agent.builddirectory)/output/build/archive
          exportPath: $(agent.builddirectory)/output/build/export
          signingOption: $(SIGNING_OPTION)
          outputPattern: $(agent.builddirectory)/output/build
      - task: CopyFiles@2
        displayName: Copy build files to staging
        inputs:
          SourceFolder: $(agent.builddirectory)/output/build/export
          Contents: '**/*.ipa'
          TargetFolder: $(build.artifactstagingdirectory)/build
          OverWrite: true
          flattenFolders: true
      - task: CopyFiles@2
        displayName: Copy symbol files to staging
        inputs:
          SourceFolder: >-
            $(agent.builddirectory)/output/build/archive/Etendo_Mobile.xcarchive/dSYMs
          Contents: '**/*.dSYM/**'
          TargetFolder: $(build.artifactstagingdirectory)/symbols
          OverWrite: true
      - task: PublishBuildArtifacts@1
        displayName: Publish build
        inputs:
          PathtoPublish: $(build.artifactstagingdirectory)/build
          ArtifactName: build
          TargetPath: \\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)
      - task: PublishBuildArtifacts@1
        displayName: Publish symbols
        continueOnError: true
        inputs:
          PathtoPublish: $(build.artifactstagingdirectory)/symbols
          ArtifactName: symbols
          TargetPath: \\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)
      - task: AppStoreRelease@1
        inputs:
          serviceEndpoint: 'app center'
          releaseTrack: 'Production'
          ipaPath: '$(build.artifactstagingdirectory)/build/*.ipa'
          appIdentifier: 'com.etendoapploader.ios'
          appType: 'iOS'
          appSpecificId: '6451114033'
        displayName: 'Publish to App Store'